# -*- coding: utf-8 -*-
"""futureintern_pd_05.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1egY1vwt2sTHxzzwjpubIryy9gXBddudd
"""

import random
import string

def generate_random_password(password_length, include_uppercase, include_lowercase, include_digits, include_special_chars):
    # Defining the character sets
    uppercase_chars = string.ascii_uppercase
    lowercase_chars = string.ascii_lowercase
    digit_chars = string.digits
    special_chars = string.punctuation

    # Build the character set of characters based on user selection
    char_set = " "
    if include_uppercase:
        char_set += uppercase_chars
    if include_lowercase:
        char_set += lowercase_chars
    if include_digits:
        char_set += digit_chars
    if include_special_chars:
        char_set += special_chars

    # Ensure the charater set is not empty
    if not char_set:
        raise ValueError("At least one type of character must be selected.")

    # Generate the password
    password = ''.join(random.choice(char_set) for i in range(password_length))
    return password

def main():
    try:
        # Get user input
        password_length = int(input("Enter the desired password length: "))
        include_uppercase = input("Include uppercase letters? (y/n): ").lower() == 'y'
        include_lowercase = input("Include lowercase letters? (y/n): ").lower() == 'y'
        include_digits = input("Include digits? (y/n): ").lower() == 'y'
        include_special_chars = input("Include special characters? (y/n): ").lower() == 'y'

        # Generate and display the password
        password = generate_random_password(password_length, include_uppercase, include_lowercase, include_digits, include_special_chars)
        print("Generated password:", password)
    except ValueError as e:
        print("Error:", e)
    except Exception as e:
        print("Unexpected error:", e)

if __name__ == "__main__":
    main()

y